# Configuration MongoDB
MONGO_URI=mongodb+srv://votre_utilisateur:votre_mot_de_passe@cluster.mongodb.net/devtheque?retryWrites=true&w=majority

# Configuration JWT pour l'authentification
JWT_SECRET=dev_theque_afrique_jwt_secret_key
JWT_EXPIRE=7d

# Configuration Cloudinary pour le stockage des fichiers
CLOUDINARY_CLOUD_NAME=dev-theque-afrique
CLOUDINARY_API_KEY=votre_api_key
CLOUDINARY_API_SECRET=votre_api_secret

# Configuration de l'application
NODE_ENV=development
PORT=5000

# Variables optionnelles pour la configuration des emails
EMAIL_SERVICE=gmail
EMAIL_USERNAME=votre_email@gmail.com
EMAIL_PASSWORD=votre_mot_de_passe
EMAIL_FROM=noreply@devtheque-afrique.com

# Configuration du préfixe des API
API_PREFIX=/api

# Limites de téléchargement
MAX_FILE_SIZE=50000000

# Configuration de MongoDB

### Création d'un cluster MongoDB Atlas

1. Créez un compte sur [MongoDB Atlas](https://www.mongodb.com/cloud/atlas)
2. Créez un nouveau cluster (le niveau gratuit est suffisant pour commencer)
3. Configurez un utilisateur avec un mot de passe sécurisé
4. Définissez les règles de pare-feu pour autoriser les connexions
5. Obtenez l'URI de connexion et ajoutez-la dans le fichier `.env`

### Indexation des collections pour optimiser les performances

Pour optimiser les performances, créez les index suivants dans MongoDB:

```javascript
// Indexation de la collection users
db.users.createIndex({ email: 1 }, { unique: true })
db.users.createIndex({ name: 1 })

// Indexation de la collection documents
db.documents.createIndex({ title: "text", description: "text", tags: 1 })
db.documents.createIndex({ category: 1, subcategory: 1 })
db.documents.createIndex({ author: 1 })

// Indexation des collections communautaires
db.community_files.createIndex({ title: "text", description: "text", tags: 1 })
db.community_files.createIndex({ status: 1 })
db.community_files.createIndex({ author: 1 })

db.questions.createIndex({ title: "text", content: "text", tags: 1 })
db.questions.createIndex({ author: 1 })
db.questions.createIndex({ solved: 1 })
```

# Configuration de Cloudinary

1. Créez un compte sur [Cloudinary](https://cloudinary.com/)
2. Obtenez les informations d'API depuis le tableau de bord
3. Configurez les préférences de stockage:
   - Créez un dossier `dev-theque-afrique` pour organiser les médias
   - Définissez les transformations d'image par défaut si nécessaire
   - Configurez les limites de bande passante et de stockage selon vos besoins

# Configuration des emails

Pour activer les notifications par email:

1. Configurez les variables EMAIL_* dans le fichier .env
2. Si vous utilisez Gmail, vous devez créer un [mot de passe d'application](https://support.google.com/accounts/answer/185833)
3. Testez l'envoi d'emails avec la commande:
   ```bash
   npm run test-email
   ```

# Configuration CORS et sécurité

Pour la sécurité en production, ajustez les paramètres CORS dans `server.js`:

```javascript
const corsOptions = {
  origin: process.env.NODE_ENV === 'production' 
    ? ['https://votre-domaine.com'] 
    : '*',
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],
  allowedHeaders: ['Content-Type', 'Authorization']
};

app.use(cors(corsOptions));
```

# 4. Guide d'administration des utilisateurs

```javascript:admin/users-admin.md
# Administration des utilisateurs

Ce document détaille comment gérer les utilisateurs de la plateforme Dev-thèque Afrique.

## Interface d'administration des utilisateurs

L'interface d'administration des utilisateurs est accessible à l'adresse `/admin/users`. Cette interface vous permet de:

1. Visualiser tous les utilisateurs
2. Rechercher des utilisateurs
3. Modifier les informations des utilisateurs
4. Gérer les rôles et permissions
5. Suspendre ou supprimer des comptes

## Gestion des rôles

La plateforme utilise trois rôles principaux:

| Rôle | Description | Permissions |
|------|-------------|------------|
| user | Utilisateur standard | Télécharger des documents, participer à la communauté |
| moderator | Modérateur | Valider le contenu communautaire, résoudre les signalements |
| admin | Administrateur | Accès complet à toutes les fonctionnalités |

### Attribuer un rôle à un utilisateur

1. Accédez à `/admin/users`
2. Recherchez l'utilisateur concerné
3. Cliquez sur "Modifier"
4. Sélectionnez le rôle approprié dans le menu déroulant
5. Cliquez sur "Enregistrer"

Alternativement, vous pouvez utiliser l'API directement:

```bash
curl -X PUT https://votre-domaine.com/api/admin/users/role \
  -H "Authorization: Bearer VOTRE_TOKEN_ADMIN" \
  -H "Content-Type: application/json" \
  -d '{"userId": "ID_UTILISATEUR", "role": "moderator"}'
```

## Gestion des points

Vous pouvez ajuster manuellement les points des utilisateurs:

1. Accédez à la page de l'utilisateur
2. Cliquez sur "Ajuster les points"
3. Entrez le montant à ajouter (ou à retirer avec un nombre négatif)
4. Ajoutez une justification pour l'historique
5. Cliquez sur "Appliquer"

## Surveillance des activités

Le panneau d'administration fournit un journal des activités de chaque utilisateur:

- Documents téléchargés
- Achats effectués
- Contributions à la communauté
- Connexions au système

Pour consulter ce journal:
1. Accédez à la page de l'utilisateur
2. Cliquez sur l'onglet "Activités"

## Suspension et suppression de comptes

### Suspendre un compte

La suspension empêche temporairement un utilisateur de se connecter sans supprimer ses données:

1. Accédez à la page de l'utilisateur
2. Cliquez sur "Suspendre le compte"
3. Indiquez la raison et la durée de la suspension
4. Cliquez sur "Confirmer"

### Supprimer un compte

La suppression est définitive et retire toutes les données associées à l'utilisateur:

1. Accédez à la page de l'utilisateur
2. Cliquez sur "Supprimer le compte"
3. Confirmez que vous souhaitez supprimer définitivement ce compte
4. Entrez votre mot de passe administrateur pour confirmer

## Script d'import/export d'utilisateurs

Pour importer des utilisateurs en masse:

```bash
node admin/scripts/import-users.js chemin/vers/fichier.csv
```

Le fichier CSV doit suivre ce format:
```
email,name,role,points
user1@example.com,Nom Utilisateur,user,500
admin@example.com,Admin User,admin,1000 